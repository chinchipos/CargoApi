"""DB updated

Revision ID: 7bbc7d43a09c
Revises: 
Create Date: 2024-09-19 13:18:20.174378

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7bbc7d43a09c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('azs_owner',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование владельца сети АЗС'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Владельцы АЗС (сети ТО)'
    )
    op.create_table('card_type',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Название типа'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Типы карт'
    )
    op.create_table('inner_goods',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Наименование в нашей системе'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Продукты в нашей системе'
    )
    op.create_table('inner_goods_group',
    sa.Column('name', sa.String(length=255), nullable=True, comment='Наименование группы'),
    sa.Column('inner_category', postgresql.ENUM('FUEL', 'OTHER_SERVICES', 'CAFE', 'FOOD', 'NON_FOOD', 'ROAD_PAYING', name='goodscategory'), nullable=True, comment='Категория продуктов в нашей системе'),
    sa.Column('base_unit', postgresql.ENUM('ITEMS', 'LITERS', 'RUB', name='unit'), nullable=True, comment='Базовая единица измерения (кроме рублей)'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Группы продуктов в нашей системе'
    )
    op.create_table('log_type',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Название типа'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Типы логов'
    )
    op.create_table('notification',
    sa.Column('date_create', sa.Date(), server_default=sa.text('NOW()'), nullable=False, comment='Дата создания'),
    sa.Column('caption', sa.String(), nullable=False, comment='Заголовок'),
    sa.Column('text', sa.String(), nullable=False, comment='Текст'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Уведомления'
    )
    op.create_table('permition',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Имя'),
    sa.Column('description', sa.String(), nullable=False, comment='Описание'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Права доступа'
    )
    op.create_table('region',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование региона'),
    sa.Column('country', sa.String(length=255), nullable=False, comment='Страна'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Регионы'
    )
    op.create_table('role',
    sa.Column('name', sa.String(length=50), nullable=False, comment='Условное обозначение роли'),
    sa.Column('title', sa.String(length=50), nullable=False, comment='Отображаемое наименование роли'),
    sa.Column('description', sa.String(), nullable=False, comment='Описание роли'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('title'),
    schema='cargonomica',
    comment='Роли'
    )
    op.create_table('system',
    sa.Column('master_db_id', sa.Integer(), nullable=True, comment='Идентификатор в боевой БД (для синхронизации)'),
    sa.Column('full_name', sa.String(length=255), nullable=False, comment='Полное наименование организации'),
    sa.Column('short_name', sa.String(length=30), nullable=False, comment='Сокращенное наименование организации'),
    sa.Column('balance', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Наш текущий баланс в системе поставщика услуг (актуален для перекупной схемы)'),
    sa.Column('transaction_days', sa.SmallInteger(), server_default=sa.text('50'), nullable=False, comment='Период, за который запрашиваются транзакции при синхронизации'),
    sa.Column('scheme', postgresql.ENUM('AGENCY', 'OVERBOUGHT', name='contractscheme'), server_default='OVERBOUGHT', nullable=False, comment='Схема работы (агентская, перекупная, ...). См. соответствующий public -> Types.'),
    sa.Column('limits_on', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Признак - в системе доступна функция установки лимитов'),
    sa.Column('enabled', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Признак - с системой заключен договор, можно в ней обслуживаться на текущий момент'),
    sa.Column('transactions_sync_dt', sa.DateTime(), nullable=True, comment='Дата последней успешной синхронизаци транзакций'),
    sa.Column('cards_sync_dt', sa.DateTime(), nullable=True, comment='Дата последней успешной синхронизации карт'),
    sa.Column('balance_sync_dt', sa.DateTime(), nullable=True, comment='Дата последней успешной синхронизации баланса'),
    sa.Column('card_icon_url', sa.String(), nullable=True, comment='Ссылка на иконку карты'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('full_name'),
    sa.UniqueConstraint('short_name'),
    schema='cargonomica',
    comment='Поставщики услуг'
    )
    op.create_table('tariff',
    sa.Column('master_db_id', sa.Integer(), nullable=True, comment='Идентификатор в боевой БД (для синхронизации)'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='Название'),
    sa.Column('fee_percent', sa.Numeric(precision=5, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Комиссия, %'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Тарифы'
    )
    op.create_table('tariff_policy',
    sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование'),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Политика активна'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Тарифные политики'
    )
    op.create_table('azs',
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('external_id', sa.String(length=36), nullable=False, comment='Внешний ID'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Название АЗС'),
    sa.Column('address', sa.JSON(), nullable=False, comment='Адрес'),
    sa.Column('own_type', postgresql.ENUM('OWN', 'FRANCHISEE', 'OPTI', 'PARTNER', name='azsowntype'), nullable=True, comment='Тип собственности по отношению к системе'),
    sa.Column('owner_id', sa.Uuid(as_uuid=False), nullable=True, comment='Владелец сети АЗС'),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='АЗС осуществляет деятельность'),
    sa.Column('region_id', sa.Uuid(as_uuid=False), nullable=True, comment='Регион'),
    sa.Column('latitude', sa.Numeric(precision=9, scale=6, asdecimal=False), nullable=True, comment='Координаты – широта'),
    sa.Column('longitude', sa.Numeric(precision=9, scale=6, asdecimal=False), nullable=True, comment='Координаты – долгота'),
    sa.Column('timezone', sa.String(), nullable=True, comment='Часовой пояс'),
    sa.Column('working_time', sa.JSON(), nullable=True, comment='Время работы'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['owner_id'], ['cargonomica.azs_owner.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['cargonomica.region.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    sa.UniqueConstraint('system_id', 'external_id', name='system_external_id'),
    schema='cargonomica',
    comment='АЗС'
    )
    op.create_table('company',
    sa.Column('master_db_id', sa.Integer(), nullable=True, comment='Идентификатор в боевой БД (для синхронизации)'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование организации'),
    sa.Column('inn', sa.String(length=12), nullable=True, comment='ИНН'),
    sa.Column('contacts', sa.String(), server_default='', nullable=False, comment='Контактные данные (имена, телефоны, email)'),
    sa.Column('personal_account', sa.String(length=20), nullable=False, comment='Лицевой счет'),
    sa.Column('contract_number', sa.String(length=150), nullable=True, comment='Номер договора'),
    sa.Column('date_add', sa.Date(), server_default=sa.text('NOW()'), nullable=False, comment='Дата создания/добавления записи в БД'),
    sa.Column('tariff_policy_id', sa.Uuid(as_uuid=False), nullable=True, comment='Тарифная политика'),
    sa.Column('min_balance', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Минимальный баланс (бесплатный овердрафт)'),
    sa.Column('overdraft_on', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Услуга "Овердрафт" подключена'),
    sa.Column('overdraft_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Сумма овердрафта'),
    sa.Column('overdraft_days', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='Срок овердрафта, дни'),
    sa.Column('overdraft_fee_percent', sa.Numeric(precision=5, scale=3, asdecimal=False), server_default=sa.text('0.074'), nullable=False, comment='Комиссия за овердрафт, %'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['tariff_policy_id'], ['cargonomica.tariff_policy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('personal_account'),
    schema='cargonomica',
    comment='Организации'
    )
    op.create_table('log',
    sa.Column('date_time', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='Время'),
    sa.Column('log_type_id', sa.Uuid(as_uuid=False), nullable=False, comment='Тип лога'),
    sa.Column('message', sa.String(), nullable=False, comment='Сообщение'),
    sa.Column('details', sa.String(), server_default='', nullable=False, comment='Подробности'),
    sa.Column('username', sa.String(length=50), server_default='', nullable=False, comment='Имя пользователя'),
    sa.Column('previous_state', sa.String(), server_default='', nullable=False, comment='Предыдущее состояние'),
    sa.Column('new_state', sa.String(), server_default='', nullable=False, comment='Новое состояние'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['log_type_id'], ['cargonomica.log_type.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Логирование'
    )
    op.create_table('outer_goods_category',
    sa.Column('external_id', sa.String(length=36), nullable=True, comment='ID категории продуктов в системе поставщика'),
    sa.Column('name', sa.String(length=255), nullable=True, comment='Наименование категории продуктов'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('inner_category', postgresql.ENUM('FUEL', 'OTHER_SERVICES', 'CAFE', 'FOOD', 'NON_FOOD', 'ROAD_PAYING', name='goodscategory'), nullable=True, comment='Категория продуктов в нашей системе'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    schema='cargonomica',
    comment='Категории продуктов в системах поставщиков'
    )
    op.create_table('role_permition',
    sa.Column('role_id', sa.Uuid(as_uuid=False), nullable=False, comment='Роль'),
    sa.Column('permition_id', sa.Uuid(as_uuid=False), nullable=False, comment='Право'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['permition_id'], ['cargonomica.permition.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['cargonomica.role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('role_id', 'permition_id'),
    schema='cargonomica',
    comment='Привязка роей к правам доступа'
    )
    op.create_table('balance',
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('scheme', postgresql.ENUM('AGENCY', 'OVERBOUGHT', name='contractscheme'), nullable=False, comment='Схема работы (агентская, перекупная, ...). См. соответствующий public -> Types.'),
    sa.Column('balance', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Текущий баланс организации в системе поставщика услуг (актуален для агентской схемы)'),
    sa.Column('min_balance', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Постоянный овердрафт (минимальный баланс)'),
    sa.Column('min_balance_period', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Временный овердрафт (минимальный баланс на период)'),
    sa.Column('min_balance_period_end_date', sa.Date(), nullable=True, comment='Дата прекращения действия временного овердрафта'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Балансы. Для понимания таблицы и ее связей следует рассматривать ее как аналогию с банковскими счетами. У организации может быть несколько балансов (счетов). Все договоры по перекупной схеме привязаны только к одному конкретному балансу. Под каждый договор по агентской схеме существует отдельный баланс.'
    )
    op.create_table('car',
    sa.Column('master_db_id', sa.Integer(), nullable=True, comment='Идентификатор в боевой БД (для синхронизации)'),
    sa.Column('model', sa.String(length=50), server_default='', nullable=False, comment='Марка/модель'),
    sa.Column('reg_number', sa.String(length=255), nullable=False, comment='Государственный регистрационный номер'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Автомобили'
    )
    op.create_table('card_group',
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('external_id', sa.String(), nullable=False, comment='Идентификатор во внешней системе'),
    sa.Column('name', sa.String(length=50), nullable=False, comment='Название группы'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='cargonomica',
    comment='Группы карт'
    )
    op.create_table('group_limit',
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('external_id', sa.String(length=36), nullable=False, comment='Внешний ID'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('limit_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Сумма лимита'),
    sa.Column('inner_goods_category', postgresql.ENUM('FUEL', 'OTHER_SERVICES', 'CAFE', 'FOOD', 'NON_FOOD', 'ROAD_PAYING', name='goodscategory'), nullable=True, comment='Категория продуктов в нашей системе'),
    sa.Column('set_time', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='Время установки лимита в системе поставщика'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Таблица для ведения лимитов на группы карт. Используется для минимизации количества запросов к API системы поставщика'
    )
    op.create_table('notifcation_mailing',
    sa.Column('date_time_read', sa.Date(), nullable=True, comment='Время прочтения'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('notification_id', sa.Uuid(as_uuid=False), nullable=False, comment='Уведомление'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['notification_id'], ['cargonomica.notification.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Рассылка уведомлений'
    )
    op.create_table('outer_goods_group',
    sa.Column('external_id', sa.String(length=36), nullable=True, comment='ID группы продуктов в системе поставщика'),
    sa.Column('name', sa.String(length=255), nullable=True, comment='Наименование группы продуктов в системе поставщика'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('outer_category_id', sa.Uuid(as_uuid=False), nullable=False, comment='Соответствующая категория продуктов в системе поставщика'),
    sa.Column('inner_group_id', sa.Uuid(as_uuid=False), nullable=True, comment='Соответствующая группа продуктов в нашей системе'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['inner_group_id'], ['cargonomica.inner_goods_group.id'], ),
    sa.ForeignKeyConstraint(['outer_category_id'], ['cargonomica.outer_goods_category.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    schema='cargonomica',
    comment='Группы продуктов в системах поставщиков'
    )
    op.create_table('tariff_new',
    sa.Column('policy_id', sa.Uuid(as_uuid=False), nullable=False, comment='Тарифная политика'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('inner_goods_group_id', sa.Uuid(as_uuid=False), nullable=True, comment='Группа продуктов в нашей системе'),
    sa.Column('inner_goods_category', postgresql.ENUM('FUEL', 'OTHER_SERVICES', 'CAFE', 'FOOD', 'NON_FOOD', 'ROAD_PAYING', name='goodscategory'), nullable=True, comment='Категория продуктов в нашей системе'),
    sa.Column('azs_own_type', postgresql.ENUM('OWN', 'FRANCHISEE', 'OPTI', 'PARTNER', name='azsowntype'), nullable=True, comment='Тип АЗС'),
    sa.Column('region_id', sa.Uuid(as_uuid=False), nullable=True, comment='Регион'),
    sa.Column('discount_fee', sa.Numeric(precision=4, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Процент скидки/наценки'),
    sa.Column('begin_time', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='Время начала действия'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='Время прекращения действия'),
    sa.Column('azs_id', sa.Uuid(as_uuid=False), nullable=True, comment='АЗС'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['azs_id'], ['cargonomica.azs.id'], ),
    sa.ForeignKeyConstraint(['inner_goods_group_id'], ['cargonomica.inner_goods_group.id'], ),
    sa.ForeignKeyConstraint(['policy_id'], ['cargonomica.tariff_policy.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['cargonomica.region.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('policy_id', 'system_id', 'inner_goods_group_id', 'inner_goods_category', 'azs_id', 'azs_own_type', 'region_id', 'end_time', name='complex_uniq1'),
    schema='cargonomica',
    comment='Тарифы'
    )
    op.create_table('tariff_policy_history',
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('tariff_policy_id', sa.Uuid(as_uuid=False), nullable=False, comment='Тарифная политика'),
    sa.Column('begin_time', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='Время начала действия тарифной политики'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='Время прекращения действия тарифной политики'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['tariff_policy_id'], ['cargonomica.tariff_policy.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='История тарификации организаций'
    )
    op.create_table('terminal',
    sa.Column('external_id', sa.String(length=36), nullable=False, comment='Внешний ID'),
    sa.Column('name', sa.String(length=255), nullable=True, comment='Наименование терминала'),
    sa.Column('azs_id', sa.Uuid(as_uuid=False), nullable=False, comment='АЗС'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['azs_id'], ['cargonomica.azs.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='АЗС'
    )
    op.create_table('user',
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False, comment='Имя учетной записи (логин)'),
    sa.Column('hashed_password', sa.String(length=255), nullable=False, comment='Хеш пароля'),
    sa.Column('first_name', sa.String(length=50), nullable=False, comment='Имя'),
    sa.Column('last_name', sa.String(length=50), nullable=False, comment='Фамилия'),
    sa.Column('email', sa.String(length=50), nullable=False, comment='Email'),
    sa.Column('phone', sa.String(length=12), server_default='', nullable=False, comment='Телефон'),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Пользователь активен'),
    sa.Column('role_id', sa.Uuid(as_uuid=False), nullable=False, comment='Роль'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=True, comment='Организация'),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Поле необходимо для связки с FastApiUsers'),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Поле необходимо для связки с FastApiUsers'),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['cargonomica.role.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username'),
    schema='cargonomica',
    comment='Пользователи'
    )
    op.create_table('admin_company',
    sa.Column('user_id', sa.Uuid(as_uuid=False), nullable=False, comment='Пользователь'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['cargonomica.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Привязка пользователей с ролью <Менеджер ПроАВТО> к администрируемым организациям'
    )
    op.create_table('balance_system',
    sa.Column('balance_id', sa.Uuid(as_uuid=False), nullable=False, comment='Баланс'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Поставщиик услуг'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['cargonomica.balance.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('balance_id', 'system_id', name='unique_balance_system'),
    schema='cargonomica',
    comment='Связи Баланс <-> Система'
    )
    op.create_table('car_driver',
    sa.Column('car_id', sa.Uuid(as_uuid=False), nullable=False, comment='Автомобиль'),
    sa.Column('driver_id', sa.Uuid(as_uuid=False), nullable=False, comment='Водитель'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['car_id'], ['cargonomica.car.id'], ),
    sa.ForeignKeyConstraint(['driver_id'], ['cargonomica.user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='Водители'
    )
    op.create_table('card',
    sa.Column('external_id', sa.String(length=30), nullable=True, comment='ID карты в системе'),
    sa.Column('card_number', sa.String(length=20), nullable=False, comment='Номер карты'),
    sa.Column('card_type_id', sa.Uuid(as_uuid=False), nullable=False, comment='Тип карты'),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False, comment='Карта активна'),
    sa.Column('reason_for_blocking', postgresql.ENUM('MANUALLY', 'NNK', 'COMPANY', 'PIN', name='blockingcardreason'), nullable=True, comment='Причина блокировки карты'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=True, comment='Организация'),
    sa.Column('belongs_to_car_id', sa.Uuid(as_uuid=False), nullable=True, comment='Автомобиль, с которым ассоциирована карта'),
    sa.Column('belongs_to_driver_id', sa.Uuid(as_uuid=False), nullable=True, comment='Водитель, с которым ассоциирована карта'),
    sa.Column('date_last_use', sa.Date(), nullable=True, comment='Дата последнего использования'),
    sa.Column('limit_sum', sa.SmallInteger(), server_default=sa.text('0'), nullable=False, comment='Лимит (рубли)'),
    sa.Column('limit_volume', sa.SmallInteger(), server_default=sa.text('0'), nullable=False, comment='Лимит (литры)'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['belongs_to_car_id'], ['cargonomica.car.id'], ),
    sa.ForeignKeyConstraint(['belongs_to_driver_id'], ['cargonomica.user.id'], ),
    sa.ForeignKeyConstraint(['card_type_id'], ['cargonomica.card_type.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_number'),
    schema='cargonomica',
    comment='Карты'
    )
    op.create_table('outer_goods',
    sa.Column('external_id', sa.String(length=36), nullable=True, comment='ID продукта в системе поставщика'),
    sa.Column('name', sa.String(length=255), nullable=False, comment='Наименование продукта в системе поставщика'),
    sa.Column('inner_name', sa.String(length=255), nullable=True, comment='Наименование продукта в нашей системе'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('outer_group_id', sa.Uuid(as_uuid=False), nullable=True, comment='Соответствующая группа продукта в системе поставщика'),
    sa.Column('inner_goods_id', sa.Uuid(as_uuid=False), nullable=True, comment='Соответствующий продукт в нашей системе'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['inner_goods_id'], ['cargonomica.inner_goods.id'], ),
    sa.ForeignKeyConstraint(['outer_group_id'], ['cargonomica.outer_goods_group.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('external_id'),
    schema='cargonomica',
    comment='Продукты в системах поставщиков'
    )
    op.create_table('overdrafts_history',
    sa.Column('balance_id', sa.Uuid(as_uuid=False), nullable=False, comment='Баланс'),
    sa.Column('days', sa.Integer(), nullable=False, comment='Значение параметра [Срок овердрафта, дни] в период пользования услугой'),
    sa.Column('sum', sa.Numeric(precision=12, scale=2, asdecimal=False), nullable=False, comment='Значение параметра [Сумма овердрафта] в период пользования услугой'),
    sa.Column('begin_date', sa.Date(), nullable=False, comment='Дата начала пользования услугой "Овердрафт"'),
    sa.Column('end_date', sa.Date(), nullable=True, comment='Дата прекращения пользования услугой "Овердрафт"'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['cargonomica.balance.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='История овердрафтов'
    )
    op.create_table('card_history',
    sa.Column('card_id', sa.Uuid(as_uuid=False), nullable=False, comment='Карта'),
    sa.Column('company_id', sa.Uuid(as_uuid=False), nullable=False, comment='Организация'),
    sa.Column('begin_time', sa.DateTime(), server_default=sa.text('NOW()'), nullable=False, comment='Время начала владения'),
    sa.Column('end_time', sa.DateTime(), nullable=True, comment='Время прекращения владения'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['cargonomica.card.id'], ),
    sa.ForeignKeyConstraint(['company_id'], ['cargonomica.company.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='cargonomica',
    comment='История принадлежности топливных карт'
    )
    op.create_table('card_limit',
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Система'),
    sa.Column('external_id', sa.String(length=50), nullable=True, comment='Внешний идентификатор (идентификатор в системе поставщика)'),
    sa.Column('card_id', sa.Uuid(as_uuid=False), nullable=False, comment='Карта'),
    sa.Column('value', sa.Integer(), server_default=sa.text('0'), nullable=False, comment='Значение лимита'),
    sa.Column('unit', postgresql.ENUM('ITEMS', 'LITERS', 'RUB', name='unit'), nullable=False, comment='Единицы измерения'),
    sa.Column('period', postgresql.ENUM('MONTH', 'DAY', name='limitperiod'), nullable=False, comment='Период обнуления лимита'),
    sa.Column('inner_goods_group_id', sa.Uuid(as_uuid=False), nullable=True, comment='Группа продуктов в нашей системе'),
    sa.Column('inner_goods_category', postgresql.ENUM('FUEL', 'OTHER_SERVICES', 'CAFE', 'FOOD', 'NON_FOOD', 'ROAD_PAYING', name='goodscategory'), nullable=True, comment='Категория продуктов в нашей системе'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['cargonomica.card.id'], ),
    sa.ForeignKeyConstraint(['inner_goods_group_id'], ['cargonomica.inner_goods_group.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_id', 'inner_goods_category', 'inner_goods_group_id', 'period', 'unit'),
    schema='cargonomica',
    comment='Лимиты по картам'
    )
    op.create_table('card_system',
    sa.Column('card_id', sa.Uuid(as_uuid=False), nullable=False, comment='Карта'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=False, comment='Поставщиик услуг'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['card_id'], ['cargonomica.card.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('card_id', 'system_id', name='unique_card_system'),
    schema='cargonomica',
    comment='Сведения из таблицы указывают к какой системе привязана карта'
    )
    op.create_table('transaction',
    sa.Column('master_db_id', sa.String(length=255), server_default='', nullable=False, comment='Идентификатор в боевой БД (для синхронизации)'),
    sa.Column('external_id', sa.String(length=255), server_default='', nullable=False, comment='Внешний идентификатор (идентификатор в системе поставщика услуг)'),
    sa.Column('date_time', sa.DateTime(), nullable=False, comment='Время совершения транзакции'),
    sa.Column('date_time_load', sa.DateTime(), nullable=False, comment='Время прогрузки в БД'),
    sa.Column('transaction_type', postgresql.ENUM('PURCHASE', 'REFUND', 'REFILL', 'DECREASE', 'OVERDRAFT_FEE', name='transactiontype'), nullable=False, comment='Тип транзакции'),
    sa.Column('card_id', sa.Uuid(as_uuid=False), nullable=True, comment='Карта'),
    sa.Column('balance_id', sa.Uuid(as_uuid=False), nullable=True, comment='Карта'),
    sa.Column('system_id', sa.Uuid(as_uuid=False), nullable=True, comment='Поставщик услуг'),
    sa.Column('azs_code', sa.String(length=255), server_default='', nullable=False, comment='Код АЗС'),
    sa.Column('outer_goods_id', sa.Uuid(as_uuid=False), nullable=True, comment='Товар/услуга'),
    sa.Column('fuel_volume', sa.Float(), server_default=sa.text('0'), nullable=False, comment='Литры'),
    sa.Column('price', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Цена'),
    sa.Column('transaction_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Сумма по транзакции'),
    sa.Column('discount_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Скидка'),
    sa.Column('tariff_id', sa.Uuid(as_uuid=False), nullable=True, comment='Тариф'),
    sa.Column('tariff_new_id', sa.Uuid(as_uuid=False), nullable=True, comment='Тариф'),
    sa.Column('fee_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Сумма комиссионного вознаграждения по тарифу'),
    sa.Column('total_sum', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Итоговая сумма для применения к балансу организации'),
    sa.Column('company_balance', sa.Numeric(precision=12, scale=2, asdecimal=False), server_default=sa.text('0'), nullable=False, comment='Баланс организации после выполнения транзакции'),
    sa.Column('comments', sa.String(), server_default='', nullable=False, comment='Комментарии'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['balance_id'], ['cargonomica.balance.id'], ),
    sa.ForeignKeyConstraint(['card_id'], ['cargonomica.card.id'], ),
    sa.ForeignKeyConstraint(['outer_goods_id'], ['cargonomica.outer_goods.id'], ),
    sa.ForeignKeyConstraint(['system_id'], ['cargonomica.system.id'], ),
    sa.ForeignKeyConstraint(['tariff_id'], ['cargonomica.tariff.id'], ),
    sa.ForeignKeyConstraint(['tariff_new_id'], ['cargonomica.tariff_new.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date_time', 'balance_id', 'transaction_sum'),
    schema='cargonomica',
    comment='Транзакции'
    )
    op.create_table('money_receipt',
    sa.Column('bank', postgresql.ENUM('SBER', name='bank'), nullable=False, comment='Банк'),
    sa.Column('payment_id', sa.String(length=50), nullable=True, comment='Идентификатор операции (транзакции), присвоенный банком'),
    sa.Column('payment_date_time', sa.DateTime(), nullable=False, comment='Время выполнения проводки банком (по выписке)'),
    sa.Column('payment_company_name', sa.String(length=255), nullable=False, comment='Наименование организации (по выписке)'),
    sa.Column('payment_company_inn', sa.String(length=12), nullable=False, comment='ИНН организации (по выписке)'),
    sa.Column('payment_purpose', sa.String(length=210), nullable=False, comment='Назначение платежа'),
    sa.Column('amount', sa.Numeric(precision=12, scale=2, asdecimal=False), nullable=False, comment='Сумма платежа'),
    sa.Column('transaction_id', sa.Uuid(as_uuid=False), nullable=True, comment='Локальная транзакция'),
    sa.Column('id', sa.Uuid(as_uuid=False), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.ForeignKeyConstraint(['transaction_id'], ['cargonomica.transaction.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('payment_id', 'payment_date_time', 'amount', name='uniq_pmntid_time_amount'),
    schema='cargonomica',
    comment='Автозачисления денежных средств на балансы организаций'
    )
    op.create_table('celery_taskmeta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.String(length=155), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.Column('result', sa.PickleType(), nullable=True),
    sa.Column('date_done', sa.DateTime(), nullable=True),
    sa.Column('traceback', sa.Text(), nullable=True),
    sa.Column('name', sa.String(length=155), nullable=True),
    sa.Column('args', sa.LargeBinary(), nullable=True),
    sa.Column('kwargs', sa.LargeBinary(), nullable=True),
    sa.Column('worker', sa.String(length=155), nullable=True),
    sa.Column('retries', sa.Integer(), nullable=True),
    sa.Column('queue', sa.String(length=155), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('task_id'),
    sqlite_autoincrement=True
    )
    op.create_table('celery_tasksetmeta',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('taskset_id', sa.String(length=155), nullable=True),
    sa.Column('result', sa.PickleType(), nullable=True),
    sa.Column('date_done', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('taskset_id'),
    sqlite_autoincrement=True
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('celery_tasksetmeta')
    op.drop_table('celery_taskmeta')
    op.drop_table('money_receipt', schema='cargonomica')
    op.drop_table('transaction', schema='cargonomica')
    op.drop_table('card_system', schema='cargonomica')
    op.drop_table('card_limit', schema='cargonomica')
    op.drop_table('card_history', schema='cargonomica')
    op.drop_table('overdrafts_history', schema='cargonomica')
    op.drop_table('outer_goods', schema='cargonomica')
    op.drop_table('card', schema='cargonomica')
    op.drop_table('car_driver', schema='cargonomica')
    op.drop_table('balance_system', schema='cargonomica')
    op.drop_table('admin_company', schema='cargonomica')
    op.drop_table('user', schema='cargonomica')
    op.drop_table('terminal', schema='cargonomica')
    op.drop_table('tariff_policy_history', schema='cargonomica')
    op.drop_table('tariff_new', schema='cargonomica')
    op.drop_table('outer_goods_group', schema='cargonomica')
    op.drop_table('notifcation_mailing', schema='cargonomica')
    op.drop_table('group_limit', schema='cargonomica')
    op.drop_table('card_group', schema='cargonomica')
    op.drop_table('car', schema='cargonomica')
    op.drop_table('balance', schema='cargonomica')
    op.drop_table('role_permition', schema='cargonomica')
    op.drop_table('outer_goods_category', schema='cargonomica')
    op.drop_table('log', schema='cargonomica')
    op.drop_table('company', schema='cargonomica')
    op.drop_table('azs', schema='cargonomica')
    op.drop_table('tariff_policy', schema='cargonomica')
    op.drop_table('tariff', schema='cargonomica')
    op.drop_table('system', schema='cargonomica')
    op.drop_table('role', schema='cargonomica')
    op.drop_table('region', schema='cargonomica')
    op.drop_table('permition', schema='cargonomica')
    op.drop_table('notification', schema='cargonomica')
    op.drop_table('log_type', schema='cargonomica')
    op.drop_table('inner_goods_group', schema='cargonomica')
    op.drop_table('inner_goods', schema='cargonomica')
    op.drop_table('card_type', schema='cargonomica')
    op.drop_table('azs_owner', schema='cargonomica')
    # ### end Alembic commands ###
